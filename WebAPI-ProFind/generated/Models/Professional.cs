// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace WebAPI.Models
{
    /// <summary> The Professional. </summary>
    public partial class Professional
    {
        /// <summary> Initializes a new instance of Professional. </summary>
        public Professional()
        {
        }

        /// <summary> Initializes a new instance of Professional. </summary>
        /// <param name="idP"></param>
        /// <param name="nameP"></param>
        /// <param name="dateBirthP"></param>
        /// <param name="emailP"></param>
        /// <param name="passwordP"></param>
        /// <param name="activeP"></param>
        /// <param name="sexP"></param>
        /// <param name="duip"></param>
        /// <param name="afpp"></param>
        /// <param name="isssp"></param>
        /// <param name="zipCodeP"></param>
        /// <param name="salaryP"></param>
        /// <param name="hiringDateP"></param>
        /// <param name="pictureP"></param>
        /// <param name="curriculumP"></param>
        /// <param name="idPfs1"></param>
        /// <param name="idDp1"></param>
        /// <param name="idWdt1"></param>
        internal Professional(string idP, string nameP, DateOnly dateBirthP, string emailP, string passwordP, bool? activeP, bool? sexP, string duip, string afpp, string isssp, string zipCodeP, float? salaryP, DateOnly hiringDateP, byte[] pictureP, byte[] curriculumP, int? idPfs1, int? idDp1, int? idWdt1)
        {
            IdP = idP;
            NameP = nameP;
            DateBirthP = dateBirthP;
            EmailP = emailP;
            PasswordP = passwordP;
            ActiveP = activeP;
            SexP = sexP;
            Duip = duip;
            Afpp = afpp;
            Isssp = isssp;
            ZipCodeP = zipCodeP;
            SalaryP = salaryP;
            HiringDateP = hiringDateP;
            PictureP = pictureP;
            CurriculumP = curriculumP;
            IdPfs1 = idPfs1;
            IdDp1 = idDp1;
            IdWdt1 = idWdt1;
        }

        /// <summary> Gets or sets the id p. </summary>
        public string IdP { get; set; }
        /// <summary> Gets or sets the name p. </summary>
        public string NameP { get; set; }
        /// <summary> Gets or sets the date birth p. </summary>
        public DateOnly DateBirthP { get; set; }
        /// <summary> Gets or sets the email p. </summary>
        public string EmailP { get; set; }
        /// <summary> Gets or sets the password p. </summary>
        public string PasswordP { get; set; }
        /// <summary> Gets or sets the active p. </summary>
        public bool? ActiveP { get; set; }
        /// <summary> Gets or sets the sex p. </summary>
        public bool? SexP { get; set; }
        /// <summary> Gets or sets the duip. </summary>
        public string Duip { get; set; }
        /// <summary> Gets or sets the afpp. </summary>
        public string Afpp { get; set; }
        /// <summary> Gets or sets the isssp. </summary>
        public string Isssp { get; set; }
        /// <summary> Gets or sets the zip code p. </summary>
        public string ZipCodeP { get; set; }
        /// <summary> Gets or sets the salary p. </summary>
        public float? SalaryP { get; set; }
        /// <summary> Gets or sets the hiring date p. </summary>
        public DateOnly HiringDateP { get; set; }
        /// <summary> Gets or sets the picture p. </summary>
        public byte[] PictureP { get; set; }
        /// <summary> Gets or sets the curriculum p. </summary>
        public byte[] CurriculumP { get; set; }
        /// <summary> Gets or sets the id pfs 1. </summary>
        public int? IdPfs1 { get; set; }
        /// <summary> Gets or sets the id dp 1. </summary>
        public int? IdDp1 { get; set; }
        /// <summary> Gets or sets the id wdt 1. </summary>
        public int? IdWdt1 { get; set; }
    }
}
