// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WebAPI.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Tag
    {
        /// <summary>
        /// Initializes a new instance of the Tag class.
        /// </summary>
        public Tag()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Tag class.
        /// </summary>
        public Tag(string idT = default(string), string nameT = default(string), string idPj1 = default(string))
        {
            IdT = idT;
            NameT = nameT;
            IdPj1 = idPj1;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "idT")]
        public string IdT { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nameT")]
        public string NameT { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "idPj1")]
        public string IdPj1 { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (IdT != null)
            {
                if (IdT.Length > 21)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "IdT", 21);
                }
                if (IdT.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "IdT", 0);
                }
            }
            if (NameT != null)
            {
                if (NameT.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "NameT", 50);
                }
                if (NameT.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "NameT", 0);
                }
            }
            if (IdPj1 != null)
            {
                if (IdPj1.Length > 21)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "IdPj1", 21);
                }
                if (IdPj1.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "IdPj1", 0);
                }
            }
        }
    }
}
