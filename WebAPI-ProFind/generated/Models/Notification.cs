// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WebAPI.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Notification
    {
        /// <summary>
        /// Initializes a new instance of the Notification class.
        /// </summary>
        public Notification()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Notification class.
        /// </summary>
        public Notification(string idN = default(string), string titleN = default(string), string descriptionN = default(string), DateOnly dateTimeIssuedN = default(DateOnly), byte[] pictureN = default(byte[]), string idPj2 = default(string))
        {
            IdN = idN;
            TitleN = titleN;
            DescriptionN = descriptionN;
            DateTimeIssuedN = dateTimeIssuedN;
            PictureN = pictureN;
            IdPj2 = idPj2;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "idN")]
        public string IdN { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "titleN")]
        public string TitleN { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "descriptionN")]
        public string DescriptionN { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateTimeIssuedN")]
        public DateOnly DateTimeIssuedN { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pictureN")]
        public byte[] PictureN { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "idPj2")]
        public string IdPj2 { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (IdN != null)
            {
                if (IdN.Length > 21)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "IdN", 21);
                }
                if (IdN.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "IdN", 0);
                }
            }
            if (TitleN != null)
            {
                if (TitleN.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "TitleN", 50);
                }
                if (TitleN.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "TitleN", 0);
                }
            }
            if (DescriptionN != null)
            {
                if (DescriptionN.Length > 500)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "DescriptionN", 500);
                }
                if (DescriptionN.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "DescriptionN", 0);
                }
            }
            if (IdPj2 != null)
            {
                if (IdPj2.Length > 21)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "IdPj2", 21);
                }
                if (IdPj2.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "IdPj2", 0);
                }
            }
        }
    }
}
