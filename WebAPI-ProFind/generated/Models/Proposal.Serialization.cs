// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace WebAPI.Models
{
    public partial class Proposal : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(IdPp))
            {
                if (IdPp != null)
                {
                    writer.WritePropertyName("idPp");
                    writer.WriteStringValue(IdPp);
                }
                else
                {
                    writer.WriteNull("idPp");
                }
            }
            if (Optional.IsDefined(TitlePp))
            {
                if (TitlePp != null)
                {
                    writer.WritePropertyName("titlePp");
                    writer.WriteStringValue(TitlePp);
                }
                else
                {
                    writer.WriteNull("titlePp");
                }
            }
            if (Optional.IsDefined(DescriptionPp))
            {
                if (DescriptionPp != null)
                {
                    writer.WritePropertyName("descriptionPp");
                    writer.WriteStringValue(DescriptionPp);
                }
                else
                {
                    writer.WriteNull("descriptionPp");
                }
            }
            if (Optional.IsDefined(PicturePp))
            {
                if (PicturePp != null)
                {
                    writer.WritePropertyName("picturePp");
                    writer.WriteBase64StringValue(PicturePp, "D");
                }
                else
                {
                    writer.WriteNull("picturePp");
                }
            }
            if (Optional.IsDefined(SuggestedStart))
            {
                writer.WritePropertyName("suggestedStart");
                writer.WriteObjectValue(SuggestedStart);
            }
            if (Optional.IsDefined(SuggestedEnd))
            {
                writer.WritePropertyName("suggestedEnd");
                writer.WriteObjectValue(SuggestedEnd);
            }
            if (Optional.IsDefined(IdP3))
            {
                if (IdP3 != null)
                {
                    writer.WritePropertyName("idP3");
                    writer.WriteStringValue(IdP3);
                }
                else
                {
                    writer.WriteNull("idP3");
                }
            }
            if (Optional.IsDefined(IdC3))
            {
                if (IdC3 != null)
                {
                    writer.WritePropertyName("idC3");
                    writer.WriteStringValue(IdC3);
                }
                else
                {
                    writer.WriteNull("idC3");
                }
            }
            writer.WriteEndObject();
        }

        internal static Proposal DeserializeProposal(JsonElement element)
        {
            Optional<string> idPp = default;
            Optional<string> titlePp = default;
            Optional<string> descriptionPp = default;
            Optional<byte[]> picturePp = default;
            Optional<DateOnly> suggestedStart = default;
            Optional<DateOnly> suggestedEnd = default;
            Optional<string> idP3 = default;
            Optional<string> idC3 = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("idPp"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        idPp = null;
                        continue;
                    }
                    idPp = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("titlePp"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        titlePp = null;
                        continue;
                    }
                    titlePp = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("descriptionPp"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        descriptionPp = null;
                        continue;
                    }
                    descriptionPp = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("picturePp"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        picturePp = null;
                        continue;
                    }
                    picturePp = property.Value.GetBytesFromBase64("D");
                    continue;
                }
                if (property.NameEquals("suggestedStart"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    suggestedStart = DateOnly.DeserializeDateOnly(property.Value);
                    continue;
                }
                if (property.NameEquals("suggestedEnd"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    suggestedEnd = DateOnly.DeserializeDateOnly(property.Value);
                    continue;
                }
                if (property.NameEquals("idP3"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        idP3 = null;
                        continue;
                    }
                    idP3 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("idC3"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        idC3 = null;
                        continue;
                    }
                    idC3 = property.Value.GetString();
                    continue;
                }
            }
            return new Proposal(idPp.Value, titlePp.Value, descriptionPp.Value, picturePp.Value, suggestedStart.Value, suggestedEnd.Value, idP3.Value, idC3.Value);
        }
    }
}
