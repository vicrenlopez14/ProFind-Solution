// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace WebAPI.Models
{
    public partial class Client : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(IdC))
            {
                if (IdC != null)
                {
                    writer.WritePropertyName("idC");
                    writer.WriteStringValue(IdC);
                }
                else
                {
                    writer.WriteNull("idC");
                }
            }
            if (Optional.IsDefined(NameC))
            {
                if (NameC != null)
                {
                    writer.WritePropertyName("nameC");
                    writer.WriteStringValue(NameC);
                }
                else
                {
                    writer.WriteNull("nameC");
                }
            }
            if (Optional.IsDefined(EmailC))
            {
                if (EmailC != null)
                {
                    writer.WritePropertyName("emailC");
                    writer.WriteStringValue(EmailC);
                }
                else
                {
                    writer.WriteNull("emailC");
                }
            }
            if (Optional.IsDefined(PasswordC))
            {
                if (PasswordC != null)
                {
                    writer.WritePropertyName("passwordC");
                    writer.WriteStringValue(PasswordC);
                }
                else
                {
                    writer.WriteNull("passwordC");
                }
            }
            if (Optional.IsDefined(PictureC))
            {
                if (PictureC != null)
                {
                    writer.WritePropertyName("pictureC");
                    writer.WriteBase64StringValue(PictureC, "D");
                }
                else
                {
                    writer.WriteNull("pictureC");
                }
            }
            writer.WriteEndObject();
        }

        internal static Client DeserializeClient(JsonElement element)
        {
            Optional<string> idC = default;
            Optional<string> nameC = default;
            Optional<string> emailC = default;
            Optional<string> passwordC = default;
            Optional<byte[]> pictureC = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("idC"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        idC = null;
                        continue;
                    }
                    idC = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("nameC"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        nameC = null;
                        continue;
                    }
                    nameC = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("emailC"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        emailC = null;
                        continue;
                    }
                    emailC = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("passwordC"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        passwordC = null;
                        continue;
                    }
                    passwordC = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("pictureC"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        pictureC = null;
                        continue;
                    }
                    pictureC = property.Value.GetBytesFromBase64("D");
                    continue;
                }
            }
            return new Client(idC.Value, nameC.Value, emailC.Value, passwordC.Value, pictureC.Value);
        }
    }
}
